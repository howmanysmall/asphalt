[build]
# Parallel frontend - good for M-series with performance cores
jobs = 8

[profile.dev]
# Don't optimize your code (fast compile)
opt-level = 0
incremental = true

# Fully optimize all dependencies in dev builds
# This trades slower first build for much faster runtime of dev builds
# and doesn't slow down incremental rebuilds (deps rarely change)
[profile.dev.package."*"]
opt-level = 3

# Force optimize the slowest dependencies explicitly
[profile.dev.package.image]
opt-level = 3

[profile.dev.package.resvg]
opt-level = 3

[profile.dev.package.reqwest]
opt-level = 3

[profile.dev.package.tokio]
opt-level = 3

[profile.dev.package.rbx_binary]
opt-level = 3

# Optimize build scripts
[profile.dev.build-override]
opt-level = 3

# Fast linker for CI (Linux only - mold must be installed)
# macOS default linker (ld64) is already fast, no change needed
[target.x86_64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]

[target.aarch64-unknown-linux-gnu]
linker = "clang"
rustflags = ["-C", "link-arg=-fuse-ld=mold"]
